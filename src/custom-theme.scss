
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@use 'sass:map';


/// Defines a collection of typography levels to configure typography for an application.
/// Any level not specified defaults to the values defined in the Material Design specification:
/// https://material.io/guidelines/style/typography.html.
///
/// Note that the Material Design specification does not describe explicit letter-spacing values.
/// The values here come from reverse engineering the Material Design examples.
/// @param {String} $font-family Default font-family for levels that don't specify font-family.
/// @param {Map} $display-4 Configuration for the "display-4" typographic level.
/// @param {Map} $display-3 Configuration for the "display-3" typographic level.
/// @param {Map} $display-2 Configuration for the "display-2" typographic level.
/// @param {Map} $display-1 Configuration for the "display-1" typographic level.
/// @param {Map} $headline Configuration for the "headline" typographic level.
/// @param {Map} $title Configuration for the "title" typographic level.
/// @param {Map} $subheading-2 Configuration for the "subheading-2" typographic level.
/// @param {Map} $subheading-1 Configuration for the "subheading-1" typographic level.
/// @param {Map} $body-2 Configuration for the "body-2" typographic level.
/// @param {Map} $body-1 Configuration for the "body-1" typographic level.
/// @param {Map} $caption Configuration for the "caption" typographic level.
/// @param {Map} $button Configuration for the "button" typographic level.
/// @param {Map} $input Configuration for the "input" typographic level.
/// @returns {Map} A typography config for the application.
$grow-agric-typography: mat.define-typography-config(
  $font-family: 'Roboto, "Poppins", sans-serif',

  $headline-1:     mat.define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),
  $headline-2:     mat.define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),
  $headline-3:     mat.define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),
  $headline-4:     mat.define-typography-level(34px, 40px, 400),
  $headline-5:      mat.define-typography-level(24px, 32px, 400),
  $headline-6:         mat.define-typography-level(20px, 32px, 500),
  $subtitle-1:  mat.define-typography-level(16px, 28px, 400),
  $body-1:  mat.define-typography-level(15px, 24px, 400),
  $subtitle-2:        mat.define-typography-level(14px, 24px, 500),
  $body-2:        mat.define-typography-level(14px, 20px, 400),
  $caption:       mat.define-typography-level(12px, 20px, 400),
  $button:        mat.define-typography-level(14px, 14px, 500),
  // Line-height must be unit-less fraction of the font-size.
  $in/* TODO(mdc-migration): No longer supported. Use `body-1` instead. put:         mat.define-typography-level(inherit, 1.125, 400)
);

 */// mat.define-typography-level (
//   $font-size: 700,
// )

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy($grow-agric-typography);`
@include mat.all-component-typographies($grow-agric-typography);
@include mat.core();

// TODO: create a PR that once you click on a palette in https://material.io/design/color/the-color-system.html#tools-for-picking-colors, it copies the color code
// trying a palette for us
$grow-agric-palette: ( // the green
  50: #e6f6ea,
  100: #c2e9cc,
  200: #9adbac,
  300: #6ece8a,
  400: #49c371,
  500: #14b757,
  600: #03A84E,
  700: #009641,
  800: #008436,
  900: #006521,
  A100: #AAFFBC, // generated the As from http://mcg.mbitson.com/#!?mcgpalette0=%2303a84e
  A200: #AAFFBC,
  A400: #AAFFBC,
  A700: #AAFFBC,
  contrast: map.get(mat.$grey-palette, contrast),
  // contrast: (
  //   50: mat.$dark-primary-text,
  //   100: mat.$dark-primary-text,
  //   200: $dark-primary-text,
  //   300: $dark-primary-text,
  //   400: $dark-primary-text,
  //   500: $light-primary-text,
  //   600: $light-primary-text,
  //   700: $light-primary-text,
  //   800: $light-primary-text,
  //   900: $light-primary-text,
  //   A100: $dark-primary-text,
  //   A200: $light-primary-text,
  //   A400: $light-primary-text,
  //   A700: $light-primary-text,
  // )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

// using the default angular's green-palette
$grow-agric-angular-primary: mat.define-palette($grow-agric-palette); // $grow-agric-palette // mat.$green-palette
$grow-agric-angular-accent: mat.define-palette(mat.$light-green-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$grow-agric-angular-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$grow-agric-angular-theme: mat.define-light-theme((
  color: (
    primary: $grow-agric-angular-primary,
    accent: $grow-agric-angular-accent,
    warn: $grow-agric-angular-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($grow-agric-angular-theme);

